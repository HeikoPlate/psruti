// Chd.cpp: Implementierung der Klasse Chrd.
//
//////////////////////////////////////////////////////////////////////

#include "stdafx.h"
#include "Chd.h"
#include "GlobalUtilities.h"


#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

//////////////////////////////////////////////////////////////////////
// Konstruktion/Destruktion
//////////////////////////////////////////////////////////////////////

Chrd::Chrd(	HP_MIDIFILE_MODULE* mfile)
{
	int i;

	mf = mfile;
	for (i=0; i<NO_CHORDLIST_CHAN; i++)
	{
		chordlist[i].SetSize(500);
		chordlist_free[i] = 0;
		last_chord_text[i] = "";
		last_takt[i] = -1;
		last_bar[i] = -1;
		last_delta_tick[i] = -1;
		no_chord_notes[i] = 0;
		is_drum[i] = false; // all chan. initialize with melody-channel
		chord_bar[i] = 0;
		chord_delta_tick[i] = 0;
		chord_event_time[i] = 0;
	}
}

const char *Chrd::note_list_sharp[12] =
{"C","C#","D","D#","E","F","F#","G","G#","A","A#","B"};

const char *Chrd::note_list_flat[12] =
{"C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"};

const unsigned char Chrd::event_crlist_sharp[12] =
{
	0x31, // C
	0x41, // C#
	0x32, // D
	0x42, // D#
	0x33, // E
	0x34, // F
	0x44, // F#
	0x35, // G
	0x45, // G#
	0x36, // A
	0x46, // A#
	0x37  // B
};

const unsigned char Chrd::event_crlist_flat[12] =
{
	0x31, // C
	0x22, // Db
	0x32, // D
	0x23, // Eb
	0x33, // E
	0x34, // F
	0x25, // Gb
	0x35, // G
	0x26, // Ab
	0x36, // A
	0x27, // Bb
	0x37  // B
};

Chrd::~Chrd()
{
	int i;
	for (i=0; i<NO_CHORDLIST_CHAN; i++)
	{
		chordlist[i].RemoveAll();
		chordlist_free[i] = 0;
		last_chord_text[i] = "";
		no_chord_notes[i] = 0;
	}
}

//**************************************************************************
//*
//*		add_chord_note
//*		Adds a note into array chord_note
//*
//**************************************************************************

void Chrd::add_chord_note(short note, short channel, bool is_flat_key,
						  int takt,int bar, int delta_tick,
						  int event_time, bool percussion, bool sel_list[16])
{
	int i;
	is_drum[channel] = percussion;
	if (percussion) return;

	is_flat = is_flat_key;

	if ((channel != CHORD_INDEX_ALL) && (channel != CHORD_INDEX_SEL))
	{
		add_chord_note(note, CHORD_INDEX_ALL, is_flat, takt, bar, delta_tick, event_time, false, sel_list);
		if (sel_list[channel])
		{
			add_chord_note(note, CHORD_INDEX_SEL, is_flat, takt, bar, delta_tick, event_time, false, sel_list);
		}
	}

	if (no_chord_notes[channel] >= 32) return;
	for (i=0; i<no_chord_notes[channel]; i++)
	{	// don't store double notes
		if (chord_note[channel][i].note == note) return;
	}

	chord_note[channel][no_chord_notes[channel]].note = note;
	chord_note[channel][no_chord_notes[channel]].is_flat = is_flat;
	no_chord_notes[channel]++;
	// remember the time of last chord-note
	chord_takt[channel] = takt;
	chord_bar[channel] = bar;
	chord_delta_tick[channel] = delta_tick;
	chord_event_time[channel] = event_time;
	is_drum[channel] = percussion;

	if (no_chord_notes[channel]>1)
	{
		sort_notes(channel);
	}
}


//**************************************************************************
//*
//*		remove_chord_note
//*		removes a note from array chord_note
//*
//**************************************************************************

void Chrd::remove_chord_note(short note, short channel, bool sel_list[16])
{
	if (is_drum[channel]) return;

	if ((channel!=CHORD_INDEX_ALL)&&(channel!=CHORD_INDEX_SEL))
	{
		remove_chord_note(note,CHORD_INDEX_ALL, sel_list);
		if (sel_list[channel])
		{
			remove_chord_note(note,CHORD_INDEX_SEL, sel_list);
		}
	}
	int i;

	for (i=0; i<no_chord_notes[channel]; i++)
	{
		if (note == chord_note[channel][i].note)
		{
			chord_note[channel][i] = chord_note[channel][no_chord_notes[channel]-1];
			no_chord_notes[channel]--;
			break;
		}
	}


	if (no_chord_notes[channel]>1)
	{
		sort_notes(channel);
	}
}


//**************************************************************************
//*
//*		sort_notes
//*		sorts notes in list chord_note[channel]
//*
//**************************************************************************

void Chrd::sort_notes(short channel)
{
	if (is_drum[channel]) return;
	int i,j;

	for (i=1; i<no_chord_notes[channel]; i++)
	{
		CHORD_NOTE_ELEM v = chord_note[channel][i];

		j = i-1;
		while ((j>=0) && (chord_note[channel][j].note>v.note))
		{
			chord_note[channel][j+1] = chord_note[channel][j];
			j--;
		}
		chord_note[channel][j+1] = v;
	}
}

//**************************************************************************
//*
//*		analyze_chord
//*		Analyze of all chords for all channels of array chord_note
//*
//**************************************************************************

void Chrd::analyze_chord(bool is_simple_chords,
						 CArray<Chrd::BASS_NOTE_ELEM,Chrd::BASS_NOTE_ELEM> *bass_note_list,
						 int bass_note_list_free)
{
	int i,j;
	int dist;
	CHORD_NOTE_ELEM chord_n[32];
	short n[32];
	short ch;
	int anz;
	int no_chord_n;
	char b, t, a; // Base, Type und Add des Chord


	for (ch=0; ch < NO_CHORDLIST_CHAN; ch++)
	{	// loop about all channels ch, all and sel
		bool is_chord_flat = true;
		anz = no_chord_notes[ch];
		no_chord_n = no_chord_notes[ch];

		if (no_chord_n<3) continue;; // Nur 3- und 4-stimmige Akkorde

		for (i=0; (i< no_chord_n)&&(i<32); i++)
		{
			chord_n[i] = chord_note[ch][i]; // Lokal umspeichern
			if (!chord_n[i].is_flat)
			{
				is_chord_flat = false;
			}
		}

		// chord_note[channel][0] ist die kleinste Note.
		// Diese wird nach 0 verschoben, der alte Abstand zu C gemerkt.
		dist = (chord_n[0].note%12); // Oktaven Transposition

		// Transformation nach 0
		chord_n[0].note = 0;
		for (i=1; i<no_chord_n; i++)
		{
			chord_n[i].note = (chord_n[i].note-dist)%12;
		}

		// Neu sortieren
		for (i=1; i<no_chord_n; i++)
		{
			CHORD_NOTE_ELEM v = chord_n[i];
			j = i-1;
			while ((j>=0) && (chord_n[j].note>v.note))
			{
				chord_n[j+1] = chord_n[j];
				j--;
			}
			chord_n[j+1] = v;
		}

		// Chordnoten n schreiben, dabei doppelte Noten vermeiden
		int k;
		{
			k = 1;
			n[0] = 0;
			for (i=1; i<no_chord_n; i++)
			{
				if (chord_n[i].note==chord_n[i-1].note)
				{
					anz--;
					continue;
				}
				n[k] = chord_n[i].note;
				if (k >= 4) break;
				k++;
			}
			if (k < 3) continue; // macht keinen Sinn mehr
		}

		if (k==3)
		{
			b = chord3_list[n[1]][n[2]][0]; // base
			t = chord3_list[n[1]][n[2]][1];	// type
			a = chord3_list[n[1]][n[2]][2];	// add
		}

		else
		{	// k = 4
			b = chord4_list[n[1]][n[2]][n[3]][0]; // base;
			t = chord4_list[n[1]][n[2]][n[3]][1]; // type;
			a = chord4_list[n[1]][n[2]][n[3]][2]; // add;
		}


		CString chord_text;
		unsigned char cr; // chord-root in event
		unsigned char ct; // chord-type in event
		unsigned char bn = 0x7f; // base note in event

		if ((b==-1) && (t==-1))
		{
			chord_text = "** ***";
			// not used chord
			cr = 0;
			ct = 0;
		}
		else
		{
			if (((char)t > 37) ||((char)t == 34))
			{
				cr = 0;
				ct = 0;
			}
			else
			{
				if (is_chord_flat)
				{
					cr = event_crlist_flat[(b+dist)%12];
				}
				else
				{
					cr = event_crlist_sharp[(b+dist)%12];
				}

				ct = t;
/*
				// better chords
				{
					unsigned char old_cr, old_ct, old_b;
					old_cr = cr; old_ct = ct; old_b = b;
					better_chord(old_cr,old_ct,old_b,&cr,&ct,&b,is_chord_flat);
				}
*/
				if (is_simple_chords)
				{
					unsigned char old_cr, old_ct, old_b;
					old_cr = cr; old_ct = ct; old_b = b;
					simple_chord(old_cr,old_ct,old_b,&cr,&ct,&b,is_chord_flat);
					a = -1;
				}
				
				if (is_chord_flat)
				{
					chord_text.Format("%s%s%s%s",note_list_flat[(b+dist)%12],
						chord_type[ct],
						((a==-1)?"":"/"),
						((a==-1)?"":note_list_flat[(a+dist)%12]));
				}
				else
				{
					chord_text.Format("%s%s%s%s",note_list_sharp[(b+dist)%12],
						chord_type[ct],
						((a==-1)?"":"/"),
						((a==-1)?"":note_list_sharp[(a+dist)%12]));
				}
			}
		}

		// look at bass note at time: chord_event_time[ch]
		CString bass_note_text;
		if (bass_note_list_free > 0)
		{
			for (k=0; k<bass_note_list_free; k++)
			{
				if (chord_event_time[ch]==(*bass_note_list)[k].event_time)
				{
					bass_note_text = GlobalUtilities::convert_bn((*bass_note_list)[k].bn, cr, ct, &bn);
					
					if (cr==bn)
					{ // no chords like C/C !
						bass_note_text = "";
						bn = 0x7f;
					}
					else
					{
						chord_text += "/"+bass_note_text;
					}
					break;
				}
			}
		}

		if (last_chord_text[ch]!=chord_text)
			// don't repeat same chord
		{

			if (cr == 0x00) continue; // add correct chords only

			if ((last_takt[ch]==chord_takt[ch])&&(last_bar[ch]==chord_bar[ch]))
			{
				// the same position! Look for the better distance from bar
				if (last_delta_tick[ch] <= chord_delta_tick[ch])
				{ // last chord better position to bar, don't insert this
					continue;
				}
				else
				{ // this chord is better, remove last chord from list
					chordlist_free[ch]--;
					chordlist[ch].RemoveAt(chordlist_free[ch]);
				}
			}

			last_chord_text[ch] = chord_text;
			last_takt[ch] = chord_takt[ch];
			last_bar[ch] = chord_bar[ch];
			last_delta_tick[ch] = chord_delta_tick[ch];

			CHORD_ELEMENT c;
			c.takt = chord_takt[ch];
			c.bar  = chord_bar[ch];
			c.tick = 0;
			c.text = chord_text;
			c.cr = cr;
			c.ct = ct;
			c.bn = bn;

			c.resulting_time = chord_event_time[ch];
/*
CString r;
r.Format("chan %i, takt %i, bar %i, tick %i, resulting_time %i, %s",
		 ch,c.takt,c.bar, c.tick, c.resulting_time, c.text);
::MessageBox(AfxGetMainWnd()->m_hWnd,r,"Test",MB_OK|MB_TASKMODAL);
*/

			chordlist[ch].SetAtGrow(chordlist_free[ch], c);
			chordlist_free[ch]++;
		}
	}	// end loop over all channels ch
}

bool Chrd::analyze_from_line(int takt, int bar, int tick, int time, CString chord_text)
{
	unsigned char cr, ct, bn, bt;

	if (!GlobalUtilities::find_cr_ct_bn_bt(chord_text, &cr, &ct, &bn, &bt))
	{
		return false;
	}

	CHORD_ELEMENT c;
	c.takt = takt;
	c.bar  = bar;
	c.tick = tick;
	c.text = chord_text;
	c.cr = cr; 
	c.ct = ct;
	c.bn = bn;

    c.resulting_time = time;
	chordlist[0].SetAtGrow(chordlist_free[0], c);
	chordlist_free[0]++;

	return true;
}


CString Chrd::get_last_chord_text()
{
	CString lastchrd = "dummy text";

	int i;
	int last_chord_time = -1;

	for (i=0; i < NO_CHORDLIST_CHAN; i++)
	{
		if (chordlist_free[i]==0) continue;
		int time = chordlist[i][chordlist_free[i]-1].resulting_time;
		CString text = chordlist[i][chordlist_free[i]-1].text;
		if (time >= last_chord_time)
		{
			if ((time==last_chord_time)&&(text.GetLength()>lastchrd.GetLength()))
			{
				continue;
			}
			lastchrd = text;
			last_chord_time = time;
		}
	}

	return (lastchrd=="dummy text")?"":lastchrd;
}


int Chrd::get_no_chords(int chan)
{
	return chordlist_free[chan];
}

/*
void Chrd::better_chord(unsigned char cr, unsigned char ct, char b,
						unsigned char *new_cr, unsigned char *new_ct, char *new_b, bool is_flat)
{
	int offset;
	*new_cr = cr;
	*new_ct = ct;
	*new_b = b;
	bool chord_changed = false;

	if (ct!=0x0b) return;

    if (ct==0x0b) // m7b5
	{
		offset = 3;
		*new_ct = 0x09; // m6
		chord_changed = true;
	}
	
	if (chord_changed)
	{
		*new_cr = GlobalUtilities::transpose_cr(cr, offset, is_flat);
		*new_b = (b+offset)%12;
	}
}
*/


void Chrd::simple_chord(unsigned char cr, unsigned char ct, char b,
						unsigned char *new_cr, unsigned char *new_ct, char *new_b, bool is_flat)
{
	unsigned char nct = tr_simple_chord_type[ct][0];
	unsigned char ncr;
	int offset = tr_simple_chord_type[ct][1];
	if (offset==0)
	{
		ncr = GlobalUtilities::enharmonic_cr(cr,is_flat);
	}
	else
	{
		ncr = GlobalUtilities::transpose_cr(cr, offset, is_flat);
	}
	*new_ct = nct;
	*new_cr = ncr;
	*new_b = (b+offset)%12;
}

int Chrd::fill_chordeventlist(int chan,
							  CArray<Chrd::CHORD_EVENT,Chrd::CHORD_EVENT> *cevlist, int *cevlist_free)
{
	// convert data from chordlist[chan] to cevlist

	int no_chords = get_no_chords(chan);
	if (no_chords == 0)
	{
		return 0;
	}

	int i,k;
	cevlist->RemoveAll();
	*cevlist_free = 0;

	const unsigned char event_init[10] =
	{0xff,0x7f,0x07,0x43,0x7b,0x01,0x00,0x00,0x7f,0x7f};

	int last_time = -1;
	char last_cr = ' ';
	char last_ct = ' ';

	for (i=0; i<chordlist_free[chan]; i++)
	{
		int time = chordlist[chan][i].resulting_time;
		CString bass_note_text = "";

		if (time == last_time) continue;

		char cr = chordlist[chan][i].cr;
		char ct = chordlist[chan][i].ct;
		char bn = chordlist[chan][i].bn;

		CHORD_EVENT cev;

		cev.event_time = time;
		// init event
		for (k=0; k<10; k++)
		{
			cev.event[k] = event_init[k];
		}
		cev.event[6] = cr;
		cev.event[7] = ct;
		cev.event[8] = bn;

		cev.takt = chordlist[chan][i].takt;
		cev.bar = chordlist[chan][i].bar;
		cev.tick = chordlist[chan][i].tick;
		cev.text = chordlist[chan][i].text;
		cevlist->SetAtGrow(*cevlist_free,cev);
		(*cevlist_free)++;

		last_time = time;
		last_cr = cr;
		last_ct = ct;
	}

	return no_chords;
}

const char *Chrd::chord_type[] =
{
	"",			// 0x00
	"6",
	"M7",
	"M7(#11)",
	"9",
	"M7(9)",
	"6(9)",
	"aug",
	"m",		// 0x08
	"m6",
	"m7",
	"m7b5",
	"m(9)",
	"m7(9)",
	"m7_11",
	"mM7",
	"mM7_9",	// 0x10
	"dim",
	"dim7",
	"7",
	"7sus4",
	"7b5",
	"7(9)",
	"7(#11)",
	"7(13)",	// 0x18
	"7(b9)",
	"7(b13)",
	"7(#9)",
	"M7aug",
	"7aug",
	"1+8",
	"1+5",
	"sus4",		// 0x20
	"sus2",
	"---",      // or cc
	"M7b5",
	"(b5)",
	"mM7b5"
};

const int Chrd::tr_simple_chord_type[][2] =
{ // ...[ct][0] -> simple ct, ...[ct][1] -> root offset (>=0)
	/* 0 Maj	-> Maj			*/    {0,0},
	/* 1 Maj6	-> Maj			*/    {0,0},
	/* 2 Maj7	-> Maj			*/    {0,0},
	/* 3 Maj7(#11)	-> Maj7		*/    {2,0},
	/* 4 Maj(9)	-> Maj7			*/    {0,0},
	/* 5 Maj7(9)	-> Maj7		*/    {2,0},
	/* 6 Maj6(9)	-> Maj		*/    {0,0},
	/* 7 aug	-> aug			*/    {7,0},
	/* 8 min	-> min			*/    {8,0},
	/* 9 min6	-> min			*/    {8,0},
	/* 10 min7	-> min			*/    {8,0},
	/* 11 min7b5	-> min, +3	*/    {8,3},
	/* 12 min(9)	-> min		*/    {8,0},
	/* 13 min7(9)	-> min		*/    {8,0},
	/* 14 min7(11)	-> min		*/    {8,0},
	/* 15 minMaj7	-> min		*/    {8,0},
	/* 16 minMaj7(9)	-> min	*/    {8,0},
	/* 17 dim	-> dim			*/    {17,0},
	/* 18 dim7	-> dim			*/    {17,0},
	/* 19 7		-> 7			*/    {19,0},
	/* 20 7sus4	-> min			*/    {8,0},
	/* 21 7b5	-> (b5)			*/    {36,0},
	/* 22 7(9)	-> 7			*/    {19,0},
	/* 23 7(#11)-> 7			*/    {19,0},
	/* 24 7(13)	-> 7			*/    {19,0},
	/* 25 7(b9)	-> 7			*/    {19,0},
	/* 26 7(b13)-> 7			*/    {19,0},
	/* 27 7(#9)	-> 7			*/    {19,0},
	/* 28 Maj7aug	-> aug		*/    {7,0},
	/* 29 7aug	-> aug			*/    {7,0},
	/* 30 1+8	-> ---			*/    {34,0}, // kommt nicht vor
	/* 31 1+5	-> ---			*/    {34,0}, // kommt nicht vor
	/* 32 sus4	-> Maj			*/    {0,0}, 		
	/* 33 sus2	-> Maj			*/    {0,0},
	/* 34 cc	-> cc			*/    {34,0}, // kommt nicht vor
	/* 35 M7b5	-> Maj7			*/    {2,0},
	/* 36 (b5)	-> (b5)			*/    {36,0},
	/* 37 mM7b5	-> dim			*/	  {17,0}
};

// chords with three notes

const char Chrd::chord3_list[12][12][3] =
{
	{ // 0-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1}
	},
	{ // 1-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1}
	},
	{ // 2-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{2,10,-1}, // Dm7
		{2,19,-1}, // D7
		{0,33,-1}, // Csus2
		{8,36,-1}, // G#(b5)
		{2,19,-1}, // D7
		{-1,-1,-1},
		{-1,-1,-1}
	},
	{ // 3-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{5,19,-1}, // F7
//		{8,19,-1}, // Ab7 => dim: korr. 23.05.2014
		{0,17,-1}, // dim
		{0,8,-1},  // Cm
		{8,0,-1},  // Ab
		{5,19,-1}, // F7
		{0,10,-1}, // Cm7
		{0,15,-1}  // CmM7
	},
	{ // 4-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{5,10,-1},	// FM7
		{0,36,-1},	// C(b5)
		{0,0,-1},	// C
		{0,7,-1},	// Caug
		{9,8,-1},	// Am
		{0,19,-1},	// C7
		{0,2,-1}	// CM7
	},
	{ // 5-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{0,32,-1},	// Csus4
		{5,8,-1},	// Fm
		{5,0,-1},	// F
		{0,20,-1},	// C7sus4
		{-1,-1,-1}
	},
	{ // 6-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{8,19,-1},	// Ab7
		{2,19,-1},  // D7
		{6,36,-1},	// F#(b5)
		{-1,-1,-1}
	},
	{ // 7-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{8,2,-1},	// AbM7
		{0,1,-1},	// C6
		{0,19,-1},	// C7
		{0,2,-1}	// CM7
	},
	{ // 8-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{9,15,-1},	// AmM7
		{-1,-1,-1},
		{0,28,-1}	// CM7aug
	},
	{ // 9-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1}
	},
	{ // 10-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1}
	},
	{ // 11-x
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1},
		{-1,-1,-1}
	}
};

// chords with four notes
const char Chrd::chord4_list[12][12][12][3] =
{
	{ // 0-x-x
		{ // 0-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 0-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 1-x-x
		{ // 1-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			},
		{ // 1-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{0,25,-1},	// C7(b9)
			{-1,-1,-1},
		},
		{ // 1-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{ 1, 2,-1}, // CM7 
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 1-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 2-x-x
		{ // 2-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 2-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 2-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 2-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{0,12,-1},	// Cm(9)
			{-1,-1,-1},
			{-1,-1,-1},
			{0,13,-1},	// Cm7(9)
			{0,16,-1},	// CmM7(9)
		},
		{ // 2-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{2,22,-1},	// D7(9)
			{0,4,-1},	// C(9)
			{4,29,-1},	// E7aug
			{0,6,-1},	// C6(9)
			{0,22,-1},	// C7(9)
			{0,5,-1}	// CM7(9)
		},
		{ // 2-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{7,20,-1},	// G7sus4
			{2,11,-1},	// Dm7b5
			{2,10,-1},	// Dm7
			{10,4,-1},	// Bb(9)
			{11,17,0}	// Bdim/C
		},
		{ // 2-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{7,2,0},	// GM7/C
			{2,21,-1},	// D7b5
			{2,19,-1},	// D7
			{2,29,-1},	// D7aug
			{2,24,-1}	// D7(13)
		},
		{ // 2-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{8,35,-1},	// AbM7b5
			{2,20,-1},	// D7sus4
			{7,14,-1},	// Gm7_11
			{7,0,0},	// G/C
		},
		{ // 2-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{10,22,-1},	// A#7(9)
			{8,17,0},	// G#dim(C)
			},
		{ // 2-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{10,5,-1},	// BbM7(9)
			{2,1,0},	// D6/C
		},
		{ // 2-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{11,2,-1}	// BmM7/C
		},
		{ // 2-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 3-x-x
		{ // 3-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 3-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			},
		{ // 3-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 3-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			},
		{ // 3-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{4,15,0},	// EmM7/C
			{4,28,-1},	// EM7aug
			{-1,-1,-1},
			{0,27,-1},	// C7(#9)
			{4,2,0}		// EM7/C
		},
		{ // 3-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{0,14,-1},	// Cm7_11
			{5,10,-1},	// Fm7
			{5,19,-1},	// F7
			{5,20,-1},	// F7sus4
			{11,36,0}	// B(b5)/C
		},
		{ // 3-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{0,28,0},	// CM7aug/C
			{8,19,-1},	// Ab7
			{0,18,-1},	// Cdim7
			{0,11,-1},	// Cm7b5
			{0,37,-1}	// CmM7b5
		},
		{ // 3-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{8,2,-1},	// AbM7
			{0,9,-1},	// Cm6
			{0,10,-1},	// Cm7
			{0,15,-1}	// CmM7
		},
		{ // 3-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{9,37,-1},	// AmM7b5
			{8,4,-1},	// G#(9)
			{8,8,0}		// Abm/C
		},
		{ // 3-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{11,25,-1}	// B7(b9)
		},
		{ // 3-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 3-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			}
	},
	{ // 4-x-x
		{ // 4-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 4-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 4-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 4-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 4-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 4-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{5,15,-1},	// FmM7
			{5,2,-1},	// FM7
			{-1,-1,-1},
			{-1,-1,-1}
		},
		{ // 4-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{8,29,-1},	//  Ab7aug
			{6,11,-1},	// F#m7b5
			{0,21,-1},	// C7b5
			{0,35,-1}	// CM7b5
		},
		{ // 4-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{8,28,-1},	// AbM7auf
			{0,1,-1},	// C6
			{0,19,-1},	// C7
			{0,2,-1}	// CM7
		},
		{ // 4-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{9,15,-1},	// AmM7
			{0,29,-1},	// C7aug
			{0,28,-1}	// CM7aug
		},
		{ // 4-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{0,24,-1},	// C7(13)
			{9,12,-1}	// Am(9)
		},
		{ // 4-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 4-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 5-x-x
		{ // 5-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 5-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			},
		{ // 5-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 5-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 5-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 5-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 5-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{9,24,-1},	// Ab7(13)
			{6,37,-1},	// F#mM7b5
			{6,35,-1},	// GbM7b5
			{-1,-1,-1}
		},
		{ // 5-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{5,12,-1},	// Fm(9)
			{5,4,-1},	// F(9)
			{0,20,-1},	// C7sus4
			{7,19,0}	// G7/C
		},
		{ // 5-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{9,28,0},	// AM7aug/C
			{5,14,-1},	// Fm7_11
			{5,17,0},	// Fdim/C
		},
		{ // 5-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{10,2,0},	// BbM7/C
			{5,36,0}	// F(b5)/C
		},
		{ // 5-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1}
		},
		{ // 5-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 6-x-x
		{ // 6-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 6-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 6-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 6-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 6-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 6-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 6-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 6-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{7,15,0},	// GmM7/C
			{7,2,0}		// GM7/C
		},
		{ // 6-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{8,25,-1},	// Ab7(b9)
			{8,22,-1},	// Ab7(9)
			{8,27,-1}	// Ab7(#9)
		},
		{ // 6-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{10,28,0},	// A#M7aug/C
			{10,19,0}	// B7/C
		},
		{ // 6-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{11,2,0}	// BM7/C
		},
		{ // 6-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 7-x-x
		{ // 7-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 7-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 7-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 7-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 7-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 7-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 7-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 7-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 7-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{8,5,-1},	// AbM7(9)
			{8,15,0}	// AbmM7/C
		},
		{ // 7-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{9,10,-1}	// Am7(9)
		},
		{ // 7-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{11,28,0}	// BM7aug/C
		},
		{ // 7-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 8-x-x
		{ // 8-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{9,16,-1}	// AmM7_9
		},
		{ // 8-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 8-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			}
		},
	{ // 9-x-x
		{ // 9-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 9-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 10-x-x
		{ // 10-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 10-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		}
	},
	{ // 11-x-x
		{ // 11-0-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-1-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-2-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-3-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-4-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-5-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-6-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-7-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-8-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-9-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-10-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
		},
		{ // 11-11-x
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1},
			{-1,-1,-1}
		}
	}
};




